# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Release Package

# run on tags created
on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle
      run: ./gradlew build  --scan


    - name: Upload build logs
      uses: actions/upload-artifact@v4
      with:
        name: reports
        path: "**/build/reports"

    - name: Publish to GitHub Packages
      run: ./gradlew publish -x test --scan
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - name: Replace version in release_template.md
#      run: |
#        # find the version in github.ref and replace it in the release_template.md
#        version=$(echo ${{ github.ref }} | cut -c 12-) # remove the v from the tag
#
#        # replace the version in the release_template.md
#        sed -i '' "s/VERSION/${version}.${GITHUB_RUN_NUMBER}/g" release_template.md
#      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
#        body_path: release_template.md
        draft: false
        prerelease: false
